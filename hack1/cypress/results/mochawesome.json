{
  "stats": {
    "suites": 7,
    "tests": 18,
    "passes": 16,
    "pending": 0,
    "failures": 2,
    "start": "2022-10-29T06:33:41.892Z",
    "end": "2022-10-29T06:34:09.091Z",
    "duration": 27199,
    "testsRegistered": 18,
    "passPercent": 88.88888888888889,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "eb8c5e03-44c5-475f-b674-3c67075cd3c5",
      "title": "",
      "fullFile": "cypress/e2e/public.cy.js",
      "file": "cypress/e2e/public.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f5f2a220-f6d4-4e64-850e-69a2b0336ea8",
          "title": "Hack#1 Public Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "ed58a9e2-58cc-4d56-9eef-1b2d65bc3c18",
              "title": "Problem 1",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "1-1 Keyboard-container exists and the third row is correct",
                  "fullTitle": "Hack#1 Public Test Problem 1 1-1 Keyboard-container exists and the third row is correct",
                  "timedOut": null,
                  "duration": 530,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.Keyboard-container').should('be.visible');",
                  "err": {},
                  "uuid": "28a4a6cf-80a6-4375-b9a5-735cf0435caa",
                  "parentUUID": "ed58a9e2-58cc-4d56-9eef-1b2d65bc3c18",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "1-2-1 Keyboard-container first row correct",
                  "fullTitle": "Hack#1 Public Test Problem 1 1-2-1 Keyboard-container first row correct",
                  "timedOut": null,
                  "duration": 237,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const chars = 'q w e r t y u i o p'.split(' ');\ncy.get('.Keyboard-container > #KBrow_1').should('have.class', 'Keyboard-row').children().should('have.length', 10);\ncy.get('.Keyboard-container > #KBrow_1').children().each(($el, index) => {\n  cy.wrap($el).should('have.text', chars[index]).should('have.id', 'char_' + chars[index]);\n});",
                  "err": {},
                  "uuid": "cf30c063-0864-4782-a8bc-27b27cb08ccd",
                  "parentUUID": "ed58a9e2-58cc-4d56-9eef-1b2d65bc3c18",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "1-2-2 Keyboard-container second row correct",
                  "fullTitle": "Hack#1 Public Test Problem 1 1-2-2 Keyboard-container second row correct",
                  "timedOut": null,
                  "duration": 214,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const chars = 'a s d f g h j k l'.split(' ');\ncy.get('.Keyboard-container > #KBrow_2').should('have.class', 'Keyboard-row').children().should('have.length', 9);\ncy.get('.Keyboard-container > #KBrow_2').children().each(($el, index) => {\n  cy.wrap($el).should('have.text', chars[index]).should('have.id', 'char_' + chars[index]);\n});",
                  "err": {},
                  "uuid": "820f95bc-bfeb-4b12-838a-d821fc9add0c",
                  "parentUUID": "ed58a9e2-58cc-4d56-9eef-1b2d65bc3c18",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "28a4a6cf-80a6-4375-b9a5-735cf0435caa",
                "cf30c063-0864-4782-a8bc-27b27cb08ccd",
                "820f95bc-bfeb-4b12-838a-d821fc9add0c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 981,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "314d1454-2157-4182-bd94-471722d9ccba",
              "title": "Problem 2",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "2-1 Board-container exists",
                  "fullTitle": "Hack#1 Public Test Problem 2 2-1 Board-container exists",
                  "timedOut": null,
                  "duration": 93,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.Board-container').should('be.visible');",
                  "err": {},
                  "uuid": "021ad771-850e-4869-9336-cbe0015651bc",
                  "parentUUID": "314d1454-2157-4182-bd94-471722d9ccba",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "2-2-1 There are six Row-containers",
                  "fullTitle": "Hack#1 Public Test Problem 2 2-2-1 There are six Row-containers",
                  "timedOut": null,
                  "duration": 108,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.Board-container > .Row-container').should('have.length', 6);",
                  "err": {},
                  "uuid": "c1a3eaa4-4a30-4775-bd80-f07e5261ffb2",
                  "parentUUID": "314d1454-2157-4182-bd94-471722d9ccba",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "2-2-2 CurRow is at the first row",
                  "fullTitle": "Hack#1 Public Test Problem 2 2-2-2 CurRow is at the first row",
                  "timedOut": null,
                  "duration": 105,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.Board-container > .Row-container').children().eq(0).should('have.class', 'current');",
                  "err": {},
                  "uuid": "675039c3-1189-4f37-9d6c-3650ac9f8d27",
                  "parentUUID": "314d1454-2157-4182-bd94-471722d9ccba",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "021ad771-850e-4869-9336-cbe0015651bc",
                "c1a3eaa4-4a30-4775-bd80-f07e5261ffb2",
                "675039c3-1189-4f37-9d6c-3650ac9f8d27"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 306,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "cb34425a-646f-47a9-97ac-24b72cd2ce36",
              "title": "Problem 3",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "3-1 curGuess is rendered onto CurRow",
                  "fullTitle": "Hack#1 Public Test Problem 3 3-1 curGuess is rendered onto CurRow",
                  "timedOut": null,
                  "duration": 501,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('body').type('{a}');\ncy.get('.Row-wrapper.current').children().eq(0).should('have.text', 'a').and('have.id', '0-0');\ncy.get('body').type('{b}').type('{c}').type('{e}');\ncy.get('.Row-wrapper.current').children().eq(1).should('have.text', 'b').and('have.id', '0-1');\ncy.get('.Row-wrapper.current').children().eq(2).should('have.text', 'c').and('have.id', '0-2');\ncy.get('.Row-wrapper.current').children().eq(3).should('have.text', 'e').and('have.id', '0-3');",
                  "err": {},
                  "uuid": "3592ff78-c193-44c6-b9c7-cd1fd6aa5fef",
                  "parentUUID": "cb34425a-646f-47a9-97ac-24b72cd2ce36",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "3-2 Type more than 5 letters",
                  "fullTitle": "Hack#1 Public Test Problem 3 3-2 Type more than 5 letters",
                  "timedOut": null,
                  "duration": 4597,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const test = ['a', 'b', 'c', 'd', 'e', 'f'];\nfor (let i = 0; i < test.length; i += 1) {\n  cy.get('body').type(`{${test[i]}}`);\n}\ncy.get('.Row-wrapper.current').children().each(($el, index) => {\n  cy.wrap($el).should('have.text', test[index]).and('have.id', '0-' + index);\n});",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 4000ms: expected '<div#0-0.Row-wordbox.filled>' to have text 'a', but the text was 'b'",
                    "estack": "AssertionError: Timed out retrying after 4000ms: expected '<div#0-0.Row-wordbox.filled>' to have text 'a', but the text was 'b'\n    at Context.eval (webpack:///./cypress/e2e/public.cy.js:83:29)",
                    "diff": "- 'b'\n+ 'a'\n"
                  },
                  "uuid": "e013cf78-1fad-4d3e-aac4-015dc1da195d",
                  "parentUUID": "cb34425a-646f-47a9-97ac-24b72cd2ce36",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "3-3 Backspace is working",
                  "fullTitle": "Hack#1 Public Test Problem 3 3-3 Backspace is working",
                  "timedOut": null,
                  "duration": 645,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const test = ['z', 'x', 'c', 'v', 'backspace', 'b', 'n'];\nconst ans = ['z', 'x', 'c', 'b', 'n'];\nfor (let i = 0; i < test.length; i += 1) {\n  cy.get('body').type(`{${test[i]}}`);\n}\ncy.get('.Row-wrapper.current').children().each(($el, index) => {\n  cy.wrap($el).should('have.text', ans[index]);\n});",
                  "err": {},
                  "uuid": "148333b5-8931-4b0d-a5d0-ce66dbbfb77e",
                  "parentUUID": "cb34425a-646f-47a9-97ac-24b72cd2ce36",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "3-4 Filled wordboxes should have class filled",
                  "fullTitle": "Hack#1 Public Test Problem 3 3-4 Filled wordboxes should have class filled",
                  "timedOut": null,
                  "duration": 317,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.Row-wrapper.current').children().each(($el, index) => {\n  cy.wrap($el).not('have.class', 'filled');\n});\ncy.get('body').type('{z}').type('{x}');\ncy.get('.Row-wrapper.current').children().each(($el, index) => {\n  if (index < 2) {\n    if (index == 0) cy.wrap($el).should('have.text', 'z').and('have.class', 'filled');else if (index == 1) cy.wrap($el).should('have.text', 'x').and('have.class', 'filled');\n  } else {\n    cy.wrap($el).not('have.class', 'filled');\n    cy.wrap($el).should('have.text', '');\n  }\n});",
                  "err": {},
                  "uuid": "02340c64-175c-462b-8043-ac2bc74be114",
                  "parentUUID": "cb34425a-646f-47a9-97ac-24b72cd2ce36",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3592ff78-c193-44c6-b9c7-cd1fd6aa5fef",
                "148333b5-8931-4b0d-a5d0-ce66dbbfb77e",
                "02340c64-175c-462b-8043-ac2bc74be114"
              ],
              "failures": [
                "e013cf78-1fad-4d3e-aac4-015dc1da195d"
              ],
              "pending": [],
              "skipped": [],
              "duration": 6060,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "19150b2b-3480-48c7-b205-b23f33de27b4",
              "title": "Problem 4",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "4-1 CurRow change after pressing enter",
                  "fullTitle": "Hack#1 Public Test Problem 4 4-1 CurRow change after pressing enter",
                  "timedOut": null,
                  "duration": 592,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const test = ['a', 'b', 'c', 'd', 'e', 'enter'];\nfor (let i = 0; i < test.length; i += 1) {\n  cy.get('body').type(`{${test[i]}}`);\n}\ncy.get('.Board-container').children().eq(0).get('.Row-wrapper').not('have.class', 'current');\ncy.get('.Board-container').children().eq(1).get('.Row-wrapper').should('have.class', 'current');",
                  "err": {},
                  "uuid": "ad47a62f-c85c-4fee-b2db-2750359bdc83",
                  "parentUUID": "19150b2b-3480-48c7-b205-b23f33de27b4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "4-2 Green rendered correctly (only one line)",
                  "fullTitle": "Hack#1 Public Test Problem 4 4-2 Green rendered correctly (only one line)",
                  "timedOut": null,
                  "duration": 602,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const test = ['m', 'a', 'n', 'a', 's', 'enter'];\nconst answer = ['green', 'grey', 'green', 'grey', 'green'];\nfor (let i = 0; i < test.length; i += 1) {\n  cy.get('body').type(`{${test[i]}}`);\n}\ncy.get('.Board-container > .Row-container > .Row-wrapper').eq(0).children().each(($el, index) => {\n  cy.wrap($el).should('have.class', answer[index]).and('have.text', test[index]);\n});",
                  "err": {},
                  "uuid": "49e2b8a9-0e79-4b32-b9c8-2762e618057f",
                  "parentUUID": "19150b2b-3480-48c7-b205-b23f33de27b4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "4-3 Green and yellow rendered correctly (only one line)",
                  "fullTitle": "Hack#1 Public Test Problem 4 4-3 Green and yellow rendered correctly (only one line)",
                  "timedOut": null,
                  "duration": 4583,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const test = ['a', 'i', 'u', 'b', 'm', 'enter'];\nconst answer = ['grey', 'green', 'yellow', 'grey', 'yellow'];\nfor (let i = 0; i < test.length; i += 1) {\n  cy.get('body').type(`{${test[i]}}`);\n}\ncy.get('.Board-container > .Row-container > .Row-wrapper').eq(0).children().each(($el, index) => {\n  cy.wrap($el).should('have.class', answer[index]).and('have.text', test[index]);\n});",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 4000ms: expected '<div#0-0.Row-wordbox.filled>' to have class 'grey'",
                    "estack": "AssertionError: Timed out retrying after 4000ms: expected '<div#0-0.Row-wordbox.filled>' to have class 'grey'\n    at Context.eval (webpack:///./cypress/e2e/public.cy.js:159:29)",
                    "diff": null
                  },
                  "uuid": "1f1e7d01-c7f8-4898-9348-24a39016ac3d",
                  "parentUUID": "19150b2b-3480-48c7-b205-b23f33de27b4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "4-4 Multiple Lines Test",
                  "fullTitle": "Hack#1 Public Test Problem 4 4-4 Multiple Lines Test",
                  "timedOut": null,
                  "duration": 2676,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const tests = [['z', 'x', 'c', 'v', 'b', 'enter'], ['m', 'a', 'b', 'c', 'u', 'enter'], ['b', 'a', 'n', 'f', 's', 'enter'], ['m', 'u', 'n', 'a', 's', 'enter'], ['m', 'i', 'n', 'u', 's', 'enter']];\nconst answers = [['grey', 'grey', 'grey', 'grey', 'grey'], ['green', 'grey', 'grey', 'grey', 'yellow'], ['grey', 'grey', 'green', 'grey', 'green'], ['green', 'yellow', 'green', 'grey', 'green'], ['green', 'green', 'green', 'green', 'green']];\nfor (let line = 0; line < tests.length; line += 1) {\n  for (let i = 0; i < tests[0].length; i += 1) {\n    cy.get('body').type(`{${tests[line][i]}}`);\n  }\n}\ncy.get('.Board-container').children().each(($el, line) => {\n  if (line < answers.length) {\n    cy.wrap($el).children().eq(0).children().each(($el, i) => {\n      cy.wrap($el).should('have.text', tests[line][i]).should('have.class', answers[line][i]).should('have.id', line + '-' + i);\n    });\n  }\n});",
                  "err": {},
                  "uuid": "3bca7374-b6c4-49e6-9cf7-209f01899bee",
                  "parentUUID": "19150b2b-3480-48c7-b205-b23f33de27b4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ad47a62f-c85c-4fee-b2db-2750359bdc83",
                "49e2b8a9-0e79-4b32-b9c8-2762e618057f",
                "3bca7374-b6c4-49e6-9cf7-209f01899bee"
              ],
              "failures": [
                "1f1e7d01-c7f8-4898-9348-24a39016ac3d"
              ],
              "pending": [],
              "skipped": [],
              "duration": 8453,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "86079c97-13e6-4b94-9faf-be66ae5378ec",
              "title": "Problem 5",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "5-1 Render green correctly",
                  "fullTitle": "Hack#1 Public Test Problem 5 5-1 Render green correctly",
                  "timedOut": null,
                  "duration": 589,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const test = ['m', 'a', 'n', 'b', 'c', 'enter'];\nfor (let i = 0; i < test.length; i += 1) {\n  cy.get('body').type(`{${test[i]}}`);\n}\ncy.get('.Keyboard-container > .Keyboard-row > #char_n').should('have.class', 'green').and('have.text', 'n');\ncy.get('.Keyboard-container > .Keyboard-row > #char_m').should('have.class', 'green').and('have.text', 'm');\ncy.get('.Keyboard-container > .Keyboard-row > #char_a').should('have.text', 'a').not('have.class', 'green').not('have.class', 'yellow');\ncy.get('.Keyboard-container > .Keyboard-row > #char_b').should('have.text', 'b').not('have.class', 'green').not('have.class', 'yellow');\ncy.get('.Keyboard-container > .Keyboard-row > #char_c').should('have.text', 'c').not('have.class', 'green').not('have.class', 'yellow');",
                  "err": {},
                  "uuid": "d3376f6f-a8e1-416d-8886-94a935f0ed7c",
                  "parentUUID": "86079c97-13e6-4b94-9faf-be66ae5378ec",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "5-2 Multiple Lines",
                  "fullTitle": "Hack#1 Public Test Problem 5 5-2 Multiple Lines",
                  "timedOut": null,
                  "duration": 4181,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const tests = [['a', 'b', 'c', 'e', 'f', 'enter'], ['n', 'b', 'c', 'e', 'f', 'enter'], ['m', 'n', 'c', 'e', 'f', 'enter'], ['m', 'u', 'n', 'e', 'f', 'enter'], ['m', 'u', 'n', 's', 'i', 'enter'], ['a', 'b', 'c', 'e', 'f', 'enter']]; // key match with \"w i n d y\"\nconst key_match = [['', '', '', '', ''], ['', '', 'yellow', '', ''], ['green', '', 'yellow', '', ''], ['green', '', 'green', 'yellow', ''], ['green', 'yellow', 'green', 'yellow', 'yellow'], ['green', 'yellow', 'green', 'yellow', 'yellow']];\nfor (let line = 0; line < tests.length; line += 1) {\n  for (let i = 0; i < tests[0].length; i += 1) {\n    cy.get('body').type(`{${tests[line][i]}}`);\n  }\n  for (let i = 0; i < KBrow_1.length; i++) {\n    if (!solList.includes(KBrow_1[i])) {\n      cy.get('.Keyboard-container > #KBrow_1 > #char_' + KBrow_1[i]).should('have.text', KBrow_1[i]).not('have.class', 'green').not('have.class', 'yellow');\n    } else {\n      if (key_match[line][solList.indexOf(KBrow_1[i])]) {\n        cy.get('.Keyboard-container > #KBrow_1 > #char_' + KBrow_1[i]).should('have.text', KBrow_1[i]).and('have.class', key_match[line][solList.indexOf(KBrow_1[i])]);\n      } else {\n        cy.get('.Keyboard-container > #KBrow_1 > #char_' + KBrow_1[i]).should('have.text', KBrow_1[i]).not('have.class', 'green').not('have.class', 'yellow');\n      }\n    }\n  }\n  for (let i = 0; i < KBrow_2.length; i++) {\n    if (!solList.includes(KBrow_2[i])) {\n      cy.get('.Keyboard-container > #KBrow_2 > #char_' + KBrow_2[i]).should('have.text', KBrow_2[i]).not('have.class', 'green').not('have.class', 'yellow');\n    } else {\n      if (key_match[line][solList.indexOf(KBrow_2[i])]) {\n        cy.get('.Keyboard-container > #KBrow_2 > #char_' + KBrow_2[i]).should('have.text', KBrow_2[i]).and('have.class', key_match[line][solList.indexOf(KBrow_2[i])]);\n      } else {\n        cy.get('.Keyboard-container > #KBrow_2 > #char_' + KBrow_2[i]).should('have.text', KBrow_2[i]).not('have.class', 'green').not('have.class', 'yellow');\n      }\n    }\n  }\n  for (let i = 0; i < KBrow_3.length; i++) {\n    if (!solList.includes(KBrow_3[i])) {\n      cy.get('.Keyboard-container > #KBrow_3 > #char_' + KBrow_3[i]).should('have.text', KBrow_3[i]).not('have.class', 'green').not('have.class', 'yellow');\n    } else {\n      if (key_match[line][solList.indexOf(KBrow_3[i])]) {\n        cy.get('.Keyboard-container > #KBrow_3 > #char_' + KBrow_3[i]).should('have.text', KBrow_3[i]).and('have.class', key_match[line][solList.indexOf(KBrow_3[i])]);\n      } else {\n        cy.get('.Keyboard-container > #KBrow_3 > #char_' + KBrow_3[i]).should('have.text', KBrow_3[i]).not('have.class', 'green').not('have.class', 'yellow');\n      }\n    }\n  }\n}",
                  "err": {},
                  "uuid": "46833707-e11b-4b01-b664-204287c81453",
                  "parentUUID": "86079c97-13e6-4b94-9faf-be66ae5378ec",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d3376f6f-a8e1-416d-8886-94a935f0ed7c",
                "46833707-e11b-4b01-b664-204287c81453"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4770,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "e1a5beb7-f0da-486c-a2ae-8974ee03d6d6",
              "title": "Problem 6",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "6-1 Show winning info",
                  "fullTitle": "Hack#1 Public Test Problem 6 6-1 Show winning info",
                  "timedOut": null,
                  "duration": 2320,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const tests = [['a', 'b', 'c', 'e', 'f', 'enter'], ['n', 'b', 'c', 'e', 'f', 'enter'], ['m', 'n', 'c', 'e', 'f', 'enter'], ['m', 'u', 'n', 's', 'i', 'enter'], ['m', 'i', 'n', 'u', 's', 'enter']];\nfor (let line = 0; line < tests.length; line += 1) {\n  for (let i = 0; i < tests[0].length; i += 1) {\n    cy.get('body').type(`{${tests[line][i]}}`);\n  }\n  if (line != tests.length - 1) {\n    cy.get('.Wordle-lose').should('have.class', 'Hidden');\n  }\n}\ncy.get('.Wordle-win').should('have.text', 'You win!!!!');",
                  "err": {},
                  "uuid": "f0e0bb1d-d1de-4036-8367-43c2ef44bc26",
                  "parentUUID": "e1a5beb7-f0da-486c-a2ae-8974ee03d6d6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "6-2 Show losing info",
                  "fullTitle": "Hack#1 Public Test Problem 6 6-2 Show losing info",
                  "timedOut": null,
                  "duration": 2776,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const tests = [['a', 'b', 'c', 'e', 'f', 'enter'], ['n', 'b', 'c', 'e', 'f', 'enter'], ['m', 'n', 'c', 'e', 'f', 'enter'], ['m', 'u', 'n', 'e', 'f', 'enter'], ['m', 'u', 'n', 's', 'i', 'enter'], ['a', 'b', 'c', 'e', 'f', 'enter']];\nfor (let line = 0; line < tests.length; line += 1) {\n  for (let i = 0; i < tests[0].length; i += 1) {\n    cy.get('body').type(`{${tests[line][i]}}`);\n  }\n  if (line != tests.length - 1) {\n    cy.get('.Wordle-lose').should('have.class', 'Hidden');\n  }\n}\ncy.get('.Wordle-lose').not('have.class', 'Hidden').should('have.text', 'You lose!!!! The answer is ' + solution + '.');",
                  "err": {},
                  "uuid": "c65ae888-fbc5-40b7-b19f-68640aca9634",
                  "parentUUID": "e1a5beb7-f0da-486c-a2ae-8974ee03d6d6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f0e0bb1d-d1de-4036-8367-43c2ef44bc26",
                "c65ae888-fbc5-40b7-b19f-68640aca9634"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5096,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results",
        "overwrite": true,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}